{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selectedId","selectTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","status","setStatus","query","setQuery","value","onChange","event","target","Completed","Active","All","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodoModal","useState","user","setUser","userIsLoaded","setUserIsLoaded","loadUser","a","userFromServer","useEffect","href","email","name","App","setTodos","isLoaded","setIsLoaded","setSelectedId","getAllTodos","todosLoaded","selectedTodo","find","filter","titleNormalized","toLowerCase","queryNormalized","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.652045c8.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedId: number,\n  selectTodo: (todoId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectedId, selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          key={todo.id}\n          className={classNames({\n            'has-background-info-light': todo.id === selectedId,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              {\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => selectTodo(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye-slash': todo.id === selectedId,\n                  'fa-eye': todo.id !== selectedId,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  status: Status,\n  setStatus: (status: Status) => void,\n  query: string,\n  setQuery: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  status, setStatus, query, setQuery,\n}) => {\n  const handleStatusSelection = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    switch (event.target.value) {\n      case Status.Completed:\n        setStatus(Status.Completed);\n        break;\n\n      case Status.Active:\n        setStatus(Status.Active);\n        break;\n\n      default:\n        setStatus(Status.All);\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleStatusSelection}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo | null;\n  selectTodo: (todoId: number) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, selectTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [userIsLoaded, setUserIsLoaded] = useState(false);\n\n  const loadUser = async (userId: number) => {\n    const userFromServer = await getUser(userId);\n\n    if (userFromServer) {\n      setUser(userFromServer);\n      setUserIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    if (todo) {\n      loadUser(todo.userId);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div\n        className=\"modal-background\"\n        onClick={() => selectTodo(0)} // close on click outside modal\n      />\n\n      {!userIsLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodo(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedId, setSelectedId] = useState(0);\n  const [status, setStatus] = useState<Status>(Status.All);\n  const [query, setQuery] = useState('');\n\n  const getAllTodos = async () => {\n    const todosLoaded = await getTodos();\n\n    setTodos(todosLoaded);\n    setIsLoaded(true);\n  };\n\n  useEffect(() => {\n    getAllTodos();\n  }, []);\n\n  const selectTodo = (id: number) => {\n    setSelectedId(id);\n  };\n\n  const selectedTodo = todos.find(todo => todo.id === selectedId) || null;\n\n  const getFilteredTodos = () => (\n    todos.filter(todo => {\n      const titleNormalized = todo.title.toLowerCase();\n      const queryNormalized = query.toLowerCase();\n\n      return titleNormalized.includes(queryNormalized);\n    }).filter(todo => {\n      switch (status) {\n        case Status.Completed:\n          return todo.completed;\n\n        case Status.Active:\n          return !todo.completed;\n\n        case Status.All:\n        default:\n          return todo;\n      }\n    })\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                setStatus={setStatus}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoaded\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={getFilteredTodos()}\n                    selectedId={selectedId}\n                    selectTodo={selectTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedId\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            selectTodo={selectTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}